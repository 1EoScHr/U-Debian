# 我的Debian部署记录
*U-Debian & x1c*

***

## U-Debian进入系统前准备

### 1.格式化U盘
选择较为**高速**的盘，譬如固态U盘或硬盘，读写速度快，不会不跟手。（这里使用Kingston DTMax 256G 固态U盘）  
工具使用**DiskGenius**，先将盘格式化，并以**GPT**格式重建引导分区，便于后续采用**GPT+UEFI**的引导来进入便携DEBIAN。由亲身经历可知用**MBR**格式笔电不识别，懒的折腾。  
重建完后，听从建议，**先给盘内划一个1G（或更多）的NTFS空间**，以此来放置关键工具，譬如**DG**与**Linux文件查看器**等，以免带到新设备上无法检测用来排错等。**剩余的空间闲置即可**，后面将用Debian自动分区。  

### 2.使用虚拟机安装
使用**VMWare**工具，先下载好Debian的镜像iso，再创建新的虚拟机，创建完后删除自带的虚拟硬盘以防装错地方，**核数多设点装的快**。USB设备选择**USB3.1**，高级中选择引导设置为**UEFI**，然后进入安装界面，按照正常步骤走即可，探测磁盘时将U盘连接到虚拟机即可。  

### 3.解决一些bug
**直接重启进入bios仍然还会找不到Debian**，由于某些bug需要对文件再进行一些修改。原理不记，只需**将镜像iso的EFI文件下boot复制粘贴到U盘中linux文件树中的EFI文件夹内**即可。  
>具体原理见[Debian 12移动硬盘安装完全指南](https://blog.csdn.net/Asgard_Hu/article/details/131221474)与[移动硬盘制作随身Debian（GPT+UEFI）](https://blog.csdn.net/Asgard_Hu/article/details/131700377)  

***
***此时重启电脑进入bios就可以找到便携Debian了~***
***

## 进入系统后优化

### 0.安装Vim
**Vim**是灵魂编辑器，后续在linux都使用它，但发现有好用插件vimplus，后面还需要进行一些重装自编译等，这里用apt直接装，来进行基本的一些操作  
### 1.将自己加入到sudoer中
debian默认的用户是**没有管理员权限的**，所以为了操作方便，将自己加入到管理员中。  

    su root  
    vim /etc/sudoer  

找到**root**，按照**相同的格式**在下方编辑就能将自己加入到管理员。

### 2.无线网卡驱动
(似乎由于Debian坚持**纯粹的开源精神**，一些闭源驱动并没有内置。所以没有安装大厂的驱动。进来后第一件事会发现没有无线网络，所以需要打上无线网卡驱动（这里用机拯救者y7000p 2023），但是后面用x1c2018就不用再装。)  
**勘误：**U-Debian没有无线网卡是因为安装时在vmware中，主机直接给虚拟机提供网络，在安装时没有安装驱动。所以安装好后在电脑上启动时没有无线网，而x1c安装就不一样。后来更换了ax210网卡依然可以，所以可能和我想的不一样。

插上网线连上网，运行指令  

    sudo apt update  
    sudo apt install firmware-iwlwifi  

这样就会安装好wifi的驱动，重启后就可以找到了。

### 3.NVIDIA驱动安装
插上外接的屏幕，无法检测到，显然是原装的开源驱动不支持，得装**NVIDIA的闭源驱动**。  

+ 在整NV的驱动前，应该先禁用原生的开源驱动。  
    先用vim打开并修改*grub*项

    sudo vim /etc/default/grub  

    找到*GRUB_CMDLINE_LINUX*项，在后面加上  

    rd.driver.blacklist=nouveau  

    然后更新grub，下面两个指令用一个就行  

    update-grub  
    sudo grub-mkconfig -o /boot/grub/grub.cfg  

    以上是启动时禁用，以下是系统层面禁用后就完成了：  

    echo "blacklist nouveau" | sudo tee -a /etc/modprobe.d/blacklist-nvidia-nouveau.conf  
    echo "options nouveau modeset=0" | sudo tee -a /etc/modprobe.d/blacklist-nvidia-nouveau.conf  
    sudo update-initramfs -u  


+ 打开NV官网根据显卡型号以及系统下载驱动，linux下会下载**.run**文件。  
+ 下载完后将其移动到主文件夹中，**以防进入文本模式后没有中文而无法进入下载文件夹**，同时赐予其**执行权**  

    sudo chmod +x NVIDIA-Linux.~.run  

+ 据称安装时要进入文本模式安装，则用下列命令：  

    sudo telinit 3  
    sudo ./NVIDIA-Linux.~.run  

+ 安装完毕后切换回图形化界面  

    sudo telinit 5  

+ 然后就可以调节屏幕了。

***
## ThinkPad X1 Carbon 2018部署记录

1. **驱动更新：**在原生Win10上到联想support官网**更新BIOS、雷电、微码驱动**等，再换系统  
2. **安装系统：**在装系统时由于debian的安全源在国外，没法访问，导致安装极慢，**解决方法：**  
在选择完镜像源后，**配置apt时选择取消**，这时会提示无法连接安全源并将其注释掉，让日后想办法。这样就可以跳过安全源的配置，只下载镜像源能访问到的。在系统配置好之后到清华源等镜像官网复制全套链接。  
3. **后续配置：**按照U-debian配置即可，根据实际情况选择为硬件驱动。  
3. **(已经不再使用，识别效率低)指纹配置:**通过lsusb得到指纹设备“……06cb:009a Synaptics, Inc……”，选择开源库的驱动，在将其加入apt源(`sudo add-apt-repository ppa:uunicorn/open-fprintd`)
    + 提示报错信息：`AttributeError: 'NoneType' object has no attribute 'people'`  
    **解决方法：**缺少依赖，命令行输入：`sudo apt-get install python3-launchpadlib`即可  
    + 提示没有release文件，根据[issue](https://github.com/uunicorn/python-validity/issues/202)中的方法，将源改为  
`deb https://ppa.launchpadcontent.net/uunicorn/open-fprintd/ubuntu jammy main`  
`deb-src https://ppa.launchpadcontent.net/uunicorn/open-fprintd/ubuntu jammy main`即可  

    最后`$ sudo pam-auth-update`，勾选指纹即可。  
    
    + 睡眠后无法使用指纹并且卡顿，使用[issue](https://github.com/uunicorn/python-validity/issues/3#issuecomment-1127256921)中的解决方法  

4. **(索然无味)CS1.6：**突发奇想想在这台机子上配置cs1.6,果然网上也有相关的资源。但大多是用Wine配置，没什么意思。在gamux网站上找到完美移植原生版.Appimage版本，是steam+AIbot模组的。  
    + 安装完后反复报错，研究了几天，最后发现是安装的库不是32位的。经过评论里的指引与额外安装32位库(在apt安装时加上:i386)即可进入游戏。  
    + 想换成中文，得知使用goldberg emu这一破解模拟器的配置语言，但按照修改后字体全部丢失，便放弃。  

    安装及配置前前后后花了期末周复习的不少时间，最后仅玩了一个小时便索然无味。记忆中的这些总是如此。但总的来说，研究这个，一是大概的了解了**Appimage**文件类型，二是了解了64位与32位之间依赖关系与库的安装，也算是学到了一些东西的操作。


***
***基本部署已经结束，可以在U盘与x1c舒舒服服使用便携Debian了～***
***

## 一些拓展
+ 浏览器插件->沉浸式翻译 *看github、翻译课件*  
+ 浏览器插件->Stylus *方便开夜间模式*，将csdn、baidu、bilibili等变暗  
+ **ReText** *问题的关键在于深色模式*，安装**qt6ct**工具调整即可，qt6ct邀配置环境变量，在/etc/envirmonment中按照其提示，增加`QT_QPA_PLATFORMTHEME=qt6ct`即可  
+ **vimplus** *自动配置vim*，***配置过程中出现一些问题，见下方的详细配置***  
+ **自带的输入法会崩溃**，所以需要卸载掉装新的。卸载**ibus**，使用**fcitx5**并使用**\-Nord**主题，换成[漂亮的字体](https://github.com/MichaelC001/Consolas-Nerd-LXGW-Wenkai-Mono)，更美；同时要在优化页面设置自启动  
+ **tldn** *too long, didn't read*  
+ **neofetch**  


#### vimplus配置
https://github.com/MichaelC001/Consolas-Nerd-LXGW-Wenkai-Mono
**vimplus**能很方便的部署多个方便的vim插件，*但作者从2022年后便不再维护*。配置过程出现一连串问题：  

+ 使用apt下载的vim会有两个插件无法使用，提示需要支持**python3**的vim版本  
+ 为了解决问题，找到的方法是apt下载带有图形化界面的**vim-gtk**，然而进入vim后发现**ycm**插件显示无法连接服务器  
+ 根据[issue](https://github.com/chxuan/vimplus/issues/407)中的方案，将gitee源换为github最新源  
+ 然而提示vim版本又太低  
+ ***最后解决方案：手动编译安装vim***  
克隆仓库后，转到**/src**，输入如下编译配置：  

    sudo ./configure --with-features=huge --enable-multibyte -enable-python3interp=yes --enable-cscope  

    再**sudo make** 与 **sudo make install**即可。  
如果要检查，输入**vim --version**，就可以看到支持项以及详细信息了。  

+ 如果日后要删除，**sudo make uninstall**  
要*重新根据需求编译*，要**sudo make distclean**清除编译选项再用  



> 参考：  
> [ArchWiki](https://wiki.archlinux.org/title/Lenovo_ThinkPad_X1_Carbon_(Gen_6))  
> [ThinkWiki](https://www.thinkwiki.org/wiki/Category:X1_Carbon_(6th_Gen))


***

## 一些项目

### 打算做的：
+ csdiy-->自学Cpp  
+ csdiy-->missingsemester  
+ smallchat(stared C project)  
+ SKRTOS(轻量嵌入式单片机RTOS,但要linux工具链有些复杂，放到windows吧)  

### 已经做了的：  
+ 暂无